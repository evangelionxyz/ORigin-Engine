# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I../nvphysx/include -I../nvphysx/physx/include -I../nvphysx/physx/source/Common/src/windows -I../nvphysx/physx/source/LowLevelAABB/windows/include -I../nvphysx/physx/source/GpuBroadPhase/include -I../nvphysx/physx/source/GpuBroadPhase/src -I../nvphysx/physx/source/common/include -I../nvphysx/physx/source/common/src -I../nvphysx/physx/source/geomutils/include -I../nvphysx/physx/source/geomutils/src -I../nvphysx/physx/source/lowlevel/api/include -I../nvphysx/physx/source/lowlevel/common/include/utils -I../nvphysx/physx/source/lowlevel/common/include/pipeline -I../nvphysx/physx/source/lowlevelaabb/include -I../nvphysx/physx/source/lowlevelaabb/src
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../../Build/VS2022/Debug/Binaries/ThirdParty
TARGET = $(TARGETDIR)/NvLowLevelAABB.lib
OBJDIR = ../../Build/VS2022/Debug/Objs/ThirdParty/NvLowLevelAABB
DEFINES += -DWIN32 -DWIN64 -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -D_WINSOCK_DEPRECATED_NO_WARNINGS -DPX_PHYSX_GPU_SHARED_LIB_NAME=PhysXGpu_64.dll -DPX_PHYSX_STATIC_LIB -DPX_SUPPORT_PVD=1 -DPX_DEBUG=1 -DPX_CHECKED=1 -DPX_NVTX=0 -D_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = ../../Build/VS2022/Release/Binaries/ThirdParty
TARGET = $(TARGETDIR)/NvLowLevelAABB.lib
OBJDIR = ../../Build/VS2022/Release/Objs/ThirdParty/NvLowLevelAABB
DEFINES += -DWIN32 -DWIN64 -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -D_WINSOCK_DEPRECATED_NO_WARNINGS -DPX_PHYSX_GPU_SHARED_LIB_NAME=PhysXGpu_64.dll -DPX_PHYSX_STATIC_LIB -DPX_SUPPORT_PVD=1 -D_HAS_ITERATOR_DEBUGGING=0 -D_ITERATOR_DEBUG_LEVEL=0 -DPX_CHECKED=1 -DPX_NVTX=0 -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -g -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),dist)
TARGETDIR = ../../Build/VS2022/Dist/Binaries/ThirdParty
TARGET = $(TARGETDIR)/NvLowLevelAABB.lib
OBJDIR = ../../Build/VS2022/Dist/Objs/ThirdParty/NvLowLevelAABB
DEFINES += -DWIN32 -DWIN64 -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -D_WINSOCK_DEPRECATED_NO_WARNINGS -DPX_PHYSX_GPU_SHARED_LIB_NAME=PhysXGpu_64.dll -DPX_PHYSX_STATIC_LIB -DPX_SUPPORT_PVD=1 -D_HAS_ITERATOR_DEBUGGING=0 -D_ITERATOR_DEBUG_LEVEL=0 -DPX_CHECKED=1 -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/BpAABBManager.o
GENERATED += $(OBJDIR)/BpAABBManagerBase.o
GENERATED += $(OBJDIR)/BpBroadPhase.o
GENERATED += $(OBJDIR)/BpBroadPhaseABP.o
GENERATED += $(OBJDIR)/BpBroadPhaseMBP.o
GENERATED += $(OBJDIR)/BpBroadPhaseSap.o
GENERATED += $(OBJDIR)/BpBroadPhaseSapAux.o
GENERATED += $(OBJDIR)/BpBroadPhaseShared.o
GENERATED += $(OBJDIR)/BpBroadPhaseUpdate.o
GENERATED += $(OBJDIR)/BpFiltering.o
OBJECTS += $(OBJDIR)/BpAABBManager.o
OBJECTS += $(OBJDIR)/BpAABBManagerBase.o
OBJECTS += $(OBJDIR)/BpBroadPhase.o
OBJECTS += $(OBJDIR)/BpBroadPhaseABP.o
OBJECTS += $(OBJDIR)/BpBroadPhaseMBP.o
OBJECTS += $(OBJDIR)/BpBroadPhaseSap.o
OBJECTS += $(OBJDIR)/BpBroadPhaseSapAux.o
OBJECTS += $(OBJDIR)/BpBroadPhaseShared.o
OBJECTS += $(OBJDIR)/BpBroadPhaseUpdate.o
OBJECTS += $(OBJDIR)/BpFiltering.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking NvLowLevelAABB
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning NvLowLevelAABB
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/BpAABBManager.o: ../nvphysx/physx/source/lowlevelaabb/src/BpAABBManager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BpAABBManagerBase.o: ../nvphysx/physx/source/lowlevelaabb/src/BpAABBManagerBase.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BpBroadPhase.o: ../nvphysx/physx/source/lowlevelaabb/src/BpBroadPhase.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BpBroadPhaseABP.o: ../nvphysx/physx/source/lowlevelaabb/src/BpBroadPhaseABP.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BpBroadPhaseMBP.o: ../nvphysx/physx/source/lowlevelaabb/src/BpBroadPhaseMBP.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BpBroadPhaseSap.o: ../nvphysx/physx/source/lowlevelaabb/src/BpBroadPhaseSap.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BpBroadPhaseSapAux.o: ../nvphysx/physx/source/lowlevelaabb/src/BpBroadPhaseSapAux.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BpBroadPhaseShared.o: ../nvphysx/physx/source/lowlevelaabb/src/BpBroadPhaseShared.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BpBroadPhaseUpdate.o: ../nvphysx/physx/source/lowlevelaabb/src/BpBroadPhaseUpdate.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BpFiltering.o: ../nvphysx/physx/source/lowlevelaabb/src/BpFiltering.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif