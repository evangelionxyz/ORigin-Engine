# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I../nvphysx/physx/include -I../nvphysx/physx/source/common/include -I../nvphysx/physx/source/common/src -I../nvphysx/physx/source/physxvehicle/src -I../nvphysx/physx/source/physxvehicle/src/physxmetadata/include -I../nvphysx/physx/source/physxmetadata/extensions/include -I../nvphysx/physx/source/physxmetadata/core/include -I../nvphysx/physx/source/physxextensions/src/serialization/Xml -I../nvphysx/physx/source/pvdsdk/src -I../nvphysx/physx/source/pvd/include -I../nvphysx/physx/source/foundation/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../../Build/VS2022/Debug/Binaries/ThirdParty
TARGET = $(TARGETDIR)/NvPhysXVehicle.lib
OBJDIR = ../../Build/VS2022/Debug/Objs/ThirdParty/NvPhysXVehicle
DEFINES += -DWIN32 -DWIN64 -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -D_WINSOCK_DEPRECATED_NO_WARNINGS -DPX_PHYSX_GPU_SHARED_LIB_NAME=PhysXGpu_64.dll -DPX_PHYSX_STATIC_LIB -DPX_SUPPORT_PVD=1 -DPX_DEBUG=1 -DPX_CHECKED=1 -DPX_NVTX=0 -D_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -std=c++17
LIBS += ../../Build/VS2022/Debug/Binaries/ThirdParty/NvPhysXFoundation.lib ../../Build/VS2022/Debug/Binaries/ThirdParty/NvPhysXPvdSDK.lib
LDDEPS += ../../Build/VS2022/Debug/Binaries/ThirdParty/NvPhysXFoundation.lib ../../Build/VS2022/Debug/Binaries/ThirdParty/NvPhysXPvdSDK.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = ../../Build/VS2022/Release/Binaries/ThirdParty
TARGET = $(TARGETDIR)/NvPhysXVehicle.lib
OBJDIR = ../../Build/VS2022/Release/Objs/ThirdParty/NvPhysXVehicle
DEFINES += -DWIN32 -DWIN64 -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -D_WINSOCK_DEPRECATED_NO_WARNINGS -DPX_PHYSX_GPU_SHARED_LIB_NAME=PhysXGpu_64.dll -DPX_PHYSX_STATIC_LIB -DPX_SUPPORT_PVD=1 -D_HAS_ITERATOR_DEBUGGING=0 -D_ITERATOR_DEBUG_LEVEL=0 -DPX_CHECKED=1 -DPX_NVTX=0 -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -g -std=c++17
LIBS += ../../Build/VS2022/Release/Binaries/ThirdParty/NvPhysXFoundation.lib ../../Build/VS2022/Release/Binaries/ThirdParty/NvPhysXPvdSDK.lib
LDDEPS += ../../Build/VS2022/Release/Binaries/ThirdParty/NvPhysXFoundation.lib ../../Build/VS2022/Release/Binaries/ThirdParty/NvPhysXPvdSDK.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),dist)
TARGETDIR = ../../Build/VS2022/Dist/Binaries/ThirdParty
TARGET = $(TARGETDIR)/NvPhysXVehicle.lib
OBJDIR = ../../Build/VS2022/Dist/Objs/ThirdParty/NvPhysXVehicle
DEFINES += -DWIN32 -DWIN64 -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -D_WINSOCK_DEPRECATED_NO_WARNINGS -DPX_PHYSX_GPU_SHARED_LIB_NAME=PhysXGpu_64.dll -DPX_PHYSX_STATIC_LIB -DPX_SUPPORT_PVD=1 -D_HAS_ITERATOR_DEBUGGING=0 -D_ITERATOR_DEBUG_LEVEL=0 -DPX_CHECKED=1 -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../../Build/VS2022/Dist/Binaries/ThirdParty/NvPhysXFoundation.lib ../../Build/VS2022/Dist/Binaries/ThirdParty/NvPhysXPvdSDK.lib
LDDEPS += ../../Build/VS2022/Dist/Binaries/ThirdParty/NvPhysXFoundation.lib ../../Build/VS2022/Dist/Binaries/ThirdParty/NvPhysXPvdSDK.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/PxVehicleAutoGeneratedMetaDataObjects.o
GENERATED += $(OBJDIR)/PxVehicleComponents.o
GENERATED += $(OBJDIR)/PxVehicleDrive.o
GENERATED += $(OBJDIR)/PxVehicleDrive4W.o
GENERATED += $(OBJDIR)/PxVehicleDriveNW.o
GENERATED += $(OBJDIR)/PxVehicleDriveTank.o
GENERATED += $(OBJDIR)/PxVehicleMetaData.o
GENERATED += $(OBJDIR)/PxVehicleMetaDataObjects.o
GENERATED += $(OBJDIR)/PxVehicleNoDrive.o
GENERATED += $(OBJDIR)/PxVehicleSDK.o
GENERATED += $(OBJDIR)/PxVehicleSerialization.o
GENERATED += $(OBJDIR)/PxVehicleSuspWheelTire4.o
GENERATED += $(OBJDIR)/PxVehicleTireFriction.o
GENERATED += $(OBJDIR)/PxVehicleUpdate.o
GENERATED += $(OBJDIR)/PxVehicleWheels.o
GENERATED += $(OBJDIR)/VehicleUtilControl.o
GENERATED += $(OBJDIR)/VehicleUtilSetup.o
GENERATED += $(OBJDIR)/VehicleUtilTelemetry.o
OBJECTS += $(OBJDIR)/PxVehicleAutoGeneratedMetaDataObjects.o
OBJECTS += $(OBJDIR)/PxVehicleComponents.o
OBJECTS += $(OBJDIR)/PxVehicleDrive.o
OBJECTS += $(OBJDIR)/PxVehicleDrive4W.o
OBJECTS += $(OBJDIR)/PxVehicleDriveNW.o
OBJECTS += $(OBJDIR)/PxVehicleDriveTank.o
OBJECTS += $(OBJDIR)/PxVehicleMetaData.o
OBJECTS += $(OBJDIR)/PxVehicleMetaDataObjects.o
OBJECTS += $(OBJDIR)/PxVehicleNoDrive.o
OBJECTS += $(OBJDIR)/PxVehicleSDK.o
OBJECTS += $(OBJDIR)/PxVehicleSerialization.o
OBJECTS += $(OBJDIR)/PxVehicleSuspWheelTire4.o
OBJECTS += $(OBJDIR)/PxVehicleTireFriction.o
OBJECTS += $(OBJDIR)/PxVehicleUpdate.o
OBJECTS += $(OBJDIR)/PxVehicleWheels.o
OBJECTS += $(OBJDIR)/VehicleUtilControl.o
OBJECTS += $(OBJDIR)/VehicleUtilSetup.o
OBJECTS += $(OBJDIR)/VehicleUtilTelemetry.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking NvPhysXVehicle
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning NvPhysXVehicle
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/PxVehicleComponents.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleComponents.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleDrive.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleDrive.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleDrive4W.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleDrive4W.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleDriveNW.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleDriveNW.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleDriveTank.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleDriveTank.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleMetaData.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleMetaData.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleNoDrive.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleNoDrive.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleSDK.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleSDK.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleSerialization.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleSerialization.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleSuspWheelTire4.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleSuspWheelTire4.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleTireFriction.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleTireFriction.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleUpdate.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleUpdate.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleWheels.o: ../nvphysx/physx/source/physxvehicle/src/PxVehicleWheels.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VehicleUtilControl.o: ../nvphysx/physx/source/physxvehicle/src/VehicleUtilControl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VehicleUtilSetup.o: ../nvphysx/physx/source/physxvehicle/src/VehicleUtilSetup.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VehicleUtilTelemetry.o: ../nvphysx/physx/source/physxvehicle/src/VehicleUtilTelemetry.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleAutoGeneratedMetaDataObjects.o: ../nvphysx/physx/source/physxvehicle/src/physxmetadata/src/PxVehicleAutoGeneratedMetaDataObjects.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PxVehicleMetaDataObjects.o: ../nvphysx/physx/source/physxvehicle/src/physxmetadata/src/PxVehicleMetaDataObjects.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif